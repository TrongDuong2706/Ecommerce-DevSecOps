variables:
  USER_PROJECT: "onlineshop"
  HARBOR_PROJECT: "backend-devsecops"
  IMAGE_VERSION: "${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}"
  TRIVY_IMAGE_REPORT: "security_scan_image_${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_report"

stages:
  - build
  - scan
  - deploy

build:
  stage: build
  variables:
    GIT_STRATEGY: clone
  script:
    - docker build -t $IMAGE_VERSION .
  tags:
    - online-shop-runner-dev-shell
  only:
    - tags

trivy-scan-image:
  stage: scan
  variables:
    GIT_STRATEGY: none
  script:
    # Sửa lại: Dùng lệnh "clean --all" thay vì "--reset" để dọn dẹp cache
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy clean --all
    # Scan image vừa build, xuất ra báo cáo HTML
    - docker run --rm -v $(pwd):/${CI_PROJECT_NAME} -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image \
        --format template \
        --template "@contrib/html.tpl" \
        --output /${CI_PROJECT_NAME}/${TRIVY_IMAGE_REPORT}.html \
        $IMAGE_VERSION
  tags:
    - online-shop-runner-dev-shell
  only:
    - tags
  artifacts:
    paths:
      - ${TRIVY_IMAGE_REPORT}.html
    expire_in: 1 day

deploy:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - sudo su ${USER_PROJECT} -c "docker rm -f $CI_PROJECT_NAME; docker run --name $CI_PROJECT_NAME -dp $BE_PORT $IMAGE_VERSION"
  tags:
    - online-shop-runner-dev-shell
  only:
    - tags
