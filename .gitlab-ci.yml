variables:
  USER_PROJECT: "onlineshop"
  HARBOR_PROJECT: "backend-devsecops"
  IMAGE_VERSION: "${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}"
  TRIVY_IMAGE_REPORT: "security_scan_image_${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_report"
  ADDRESS_FRONTEND: "http://192.168.252.161:3000"
  ARACHNI_WEBSITE_REPORT: "security_scan_website_${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_report"
  K6_PERFORMANCE_TEST_REPORT: "performance_test_${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_report"


stages:
  - build
  - scan
  - deploy
  - security scan website
  - performance testing

build:
  stage: build
  variables:
    GIT_STRATEGY: clone
  script:
    - docker build -t $IMAGE_VERSION .
  tags:
    - online-shop-runner-dev-shell
  only:
    - tags

trivy-scan-image:
  stage: scan
  variables:
    GIT_STRATEGY: none
  script:
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy clean --all
    # Sửa lại: Gom tất cả các tham số của lệnh scan vào MỘT DÒNG DUY NHẤT
    - docker run --rm -v $(pwd):/${CI_PROJECT_NAME} -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --format template --template "@contrib/html.tpl" --output /${CI_PROJECT_NAME}/${TRIVY_IMAGE_REPORT}.html $IMAGE_VERSION
  tags:
    - online-shop-runner-dev-shell
  only:
    - tags
  artifacts:
    paths:
      - ${TRIVY_IMAGE_REPORT}.html
    expire_in: 1 day

deploy:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - sudo su ${USER_PROJECT} -c "docker rm -f $CI_PROJECT_NAME; docker run --name $CI_PROJECT_NAME -dp $BE_PORT $IMAGE_VERSION"
  tags:
    - online-shop-runner-dev-shell
  only:
    - tags
security scan website:
  stage: security scan website
  variables:
    GIT_STRATEGY: none
  script:
    - docker run --rm -v /tmp/:/tmp/ devopseduvn/arachni:v1.4-0.5.10 bin/arachni --output-verbose --scope-include-subdomains $ADDRESS_FRONTEND --report-save-path=/tmp/$ARACHNI_WEBSITE_REPORT.afr > /dev/null 2>&1
    - docker run --rm -v /tmp/:/tmp/ devopseduvn/arachni:v1.4-0.5.10 bin/arachni_reporter /tmp/$ARACHNI_WEBSITE_REPORT.afr --reporter=html:outfile=/tmp/$ARACHNI_WEBSITE_REPORT.html.zip
    - sudo chmod 777 /tmp/$ARACHNI_WEBSITE_REPORT.html.zip
    - cp /tmp/$ARACHNI_WEBSITE_REPORT.html.zip .
  tags:
    - online-shop-runner-dev-shell
  only:
    - tags
  artifacts:
    paths:
      - $ARACHNI_WEBSITE_REPORT.html.zip
    expire_in: 1 day
performance testing:
  stage: performance testing
  variables:
    GIT_STRATEGY: none
  script:
    - chmod -R 777 ./performance_testing_script/
    - docker run --rm -v $(pwd)/performance_testing_script:/performance_testing_script loadimpact/k6 run -e RESULTS_PATH=/performance_testing_script --summary-export=/performance_testing_script/summary_perf.json /performance_testing_script/smoke-test.js
    - cat ./performance_testing_script/summary_perf.json | jq -r '["metric", "avg", "min", "med", "max", "p(90)", "p(95)"], (.metrics | to_entries[] | [.key, .value.avg, .value.min, .value.med, .value.max, .value["p(90)"], .value["p(95)"]]) | @csv' > $K6_PERFORMANCE_TEST_REPORT.csv
  after_script:
    - sudo chown -R gitlab-runner $(pwd)
  tags:
    - online-shop-runner-dev-shell
  only:
    - tags
  artifacts:
    paths:
      - $K6_PERFORMANCE_TEST_REPORT.csv
    expire_in: 1 day

